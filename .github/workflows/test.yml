name: Tests
on:
  push:
    branches:
      - develop
  pull_request:
    branches-ignore:
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  DEFAULT_PYTHON: '3.13'

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Start containers
        run: |
          docker compose -f docker-compose.test.yml down -v --remove-orphans
          docker compose -f docker-compose.test.yml up --wait-timeout 5 -d

      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Install poetry
        uses: snok/install-poetry@v1

      - name: Cache poetry
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-python-${{ env.DEFAULT_PYTHON }}-test-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ env.DEFAULT_PYTHON }}-test-${{ hashFiles('**/poetry.lock') }}
            ${{ runner.os }}-python-${{ env.DEFAULT_PYTHON }}-test-
            ${{ runner.os }}-python-

      - name: Install dependencies
        run: |
          make venv

      - name: Run Tests
        run: |
          mkdir -p reports/
          make test-ci

      - name: Upload Coverage Results
        uses: actions/upload-artifact@v4
        with:
          name: raw-coverage-${{ env.DEFAULT_PYTHON }}
          path: reports/.coverage*
          # https://github.com/actions/upload-artifact/issues/602
          include-hidden-files: true

      - name: Shutdown containers
        if: always()
        run: |
          docker compose -f docker-compose.test.yml down -v --remove-orphans


  all_done:
    name: Tests done
    runs-on: ubuntu-latest
    needs: [tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ env.DEFAULT_PYTHON }}-coverage

      - name: Upgrade pip
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install dependencies
        run: pip install -I coverage

      - name: Download all raw coverage data
        uses: actions/download-artifact@v4
        with:
          path: coverage-data/
          pattern: raw-coverage-*

      - name: Combine Coverage Data
        run: |
          coverage combine coverage-data/*
          coverage xml -o combined_coverage.xml

      - name: Check Coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./combined_coverage.xml
          fail_ci_if_error: true
          plugins: noop

      - name: All done
        run: echo 1
